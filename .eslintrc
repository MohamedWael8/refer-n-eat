{
  "root": true,
  "env": {
    "browser": true,
    "es6": true,
    "mocha": true,
    "jest": true
  },
  "extends": ["react-app", "airbnb", "prettier"],
  "parser": "@babel/eslint-parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true,
      "modules": true
    },
    "sourceType": "module"
  },
  "plugins": ["import", "jsx-a11y", "react", "prettier"],
  "settings": {
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    /* Commented until resolving with prettier format */
    // "indent": [
    //   "error",
    //   2,
    //   {
    //     "SwitchCase": 1,
    //     "ignoredNodes": [
    //       "ConditionalExpression",
    //       "ObjectExpression",
    //       "CallExpression",
    //       "MemberExpression",
    //       "ArrayExpression",
    //       "offsetTernaryExpressions"
    //     ]
    //   }
    // ],
    "semi": "error",
    "object-curly-spacing": [
      "error",
      "always",
      {
        "arraysInObjects": true,
        "objectsInObjects": true
      }
    ],
    "quotes": ["error", "single"],
    "max-len": [
      "error",
      {
        "code": 140,
        "tabWidth": 2,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreTrailingComments": true,
        "ignoreComments": false
      }
    ],
    "no-console": "warn",
    "radix": "off",
    "arrow-parens": ["error", "as-needed"],
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".js", ".jsx"]
      }
    ],
    "react/require-default-props": "off",
    "react/prop-types": "warn",
    "no-unused-expressions": ["warn", { "allowShortCircuit": true, "allowTernary": true }],
    "react/jsx-props-no-spreading": "off",
    "no-plusplus": "off",
    "no-nested-ternary": "off",
    "no-return-assign": "off",
    "react/function-component-definition": ["off"],
    "react/jsx-no-constructed-context-values": "off",
    "default-param-last": "off",
    "no-param-reassign": [
      "error",
      {
        "props": true,
        "ignorePropertyModificationsFor": ["accumulator"]
      }
    ]
  }
}
